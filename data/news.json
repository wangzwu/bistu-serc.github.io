{
    "news": [
        {
            "id": "0",
            "title": "硕士研究生杨慧文在CCF A类中文期刊《软件学报》发表最新研究成果——智能合约安全漏洞检测研究进展",
            "content": [
                {
                    "types": "text",
                    "info": "智能合约是运行在区块链合约层的计算机程序,能够管理区块链上的加密数字货币和数据,实现多样化的业务逻辑,扩展了区块链的应用.由于智能合约中通常涉及大量资产,吸引了大量攻击者试图利用其中的安全漏洞获得经济利益.近年来,随着多起智能合约安全事件的发生(例如TheDAO、Parity安全事件等),针对智能合约的安全漏洞检测技术成为国内外研究热点.提出智能合约安全漏洞检测的研究框架,分别从漏洞发现与识别、漏洞分析与检测、数据集与评价指标这3个方面分析现有检测方法研究进展.首先,梳理安全漏洞信息收集的基本流程,将已知漏洞根据基础特征归纳为13种漏洞类型并提出智能合约安全漏洞分类框架;然后,按照符号执行、模糊测试、机器学习、形式化验证和静态分析5类检测技术对现有研究进行分析,并讨论各类技术的优势及局限性;第三,整理常用的数据集和评价指标;最后,对智能合约安全漏洞检测的未来研究方向提出展望."
                },
                {
                    "types": "image",
                    "info": "Smart_Contracts_Research_Process.png"
                }
            ],
            "date": "2024年1月4日",
            "graphicAbstract": "Smart_Contracts_Research_Process.png",
            "doi": "10.13328/j.cnki.jos.007046",
            "href": "https://www.jos.org.cn/jos/article/abstract/7046"
        },
        {
            "id": "1",
            "title": "硕士研究生杨慧文在CCF B类国际期刊SCP发表最新研究成果——CrossFuzz: Cross-contract fuzzing for smart contract vulnerability detection",
            "content": [
                {
                    "types": "text",
                    "info": "智能合约是在区块链上运行的计算机程序。随着智能合约实现的功能变得越来越复杂，其中的跨合约交互数量也在增加。因此，交易序列的组合爆炸对智能合约安全漏洞检测提出了重大挑战。现有的基于静态分析的检测跨合约漏洞的方法存在高误报率，无法生成测试用例，而基于模糊测试的方法代码覆盖率低，可能无法准确检测安全漏洞。"
                },
                {
                    "types": "text",
                    "info": "本文的目标是解决上述局限性，并有效地检测跨合约漏洞。为了实现这一目标，我们提出了CrossFuzz，这是一种基于模糊测试的检测跨合约漏洞的方法。首先，CrossFuzz通过跟踪数据传播路径来生成构造函数的参数。然后，它收集合同间的数据流信息。最后，CrossFuzz基于合约间数据流信息优化事务序列的变异策略，以提高模糊测试的性能。"
                },
                {
                    "types": "image",
                    "info": "CrossFuzz.png"
                },
                {
                    "types": "text",
                    "info": "我们实现了CrossFuzz，这是ConFuzzius的扩展，并在包含396个智能合约的真实数据集上进行了实验。结果表明，CrossFuzz的性能优于xFuzz，后者是一种基于模糊测试的工具，针对跨合约漏洞检测进行了优化，字节码覆盖率提高了10.58%。此外，CrossFuzz检测到的安全漏洞是ConFuzzius的1.82倍。"
                }
                ,
                {
                    "types": "text",
                    "info": "我们的方法利用数据流信息来优化变异策略。它显著提高了检测跨合约漏洞的模糊测试的效率。"
                }
            ],
            "date": "2024年1月4日",
            "graphicAbstract": "CrossFuzz.png",
            "doi": "10.1016/j.scico.2023.103076",
            "href": "https://doi.org/10.1016/j.scico.2023.103076"
        },
        {
            "id": "2",
            "title": "硕士研究生林高毅在SCI 一区期刊IoT-J发表最新研究成果——A Fast Crash Reproduction Method for Android Applications Based on Widget Hierarchy Graphs",
            "content": [
                {
                    "types": "text",
                    "info": "为了提高修复bug的效率，移动应用程序开发人员必须尽快重现测试人员或用户报告的bug。在某些情况下，自动化测试工具可以帮助开发人员重现崩溃。然而，这些工具不是为再现错误报告而设计的。它们在复制崩溃方面效率不高。"
                },
                {
                    "types": "text",
                    "info": "为了将测试资源集中在可疑的小部件上，我们提出了CrPDroid，这是一种基于小部件层次图的Android应用程序快速崩溃再现方法。首先，它使用被测应用程序的项目文件构建一个小部件层次图；然后，通过分析bug报告和被测应用程序的项目文件来定位可疑小部件，并根据小部件层次图计算每个小部件的适应度；最后，它使用小部件的适用性来指导自动测试，以快速再现崩溃。"
                },
                {
                    "types": "image",
                    "info": "CrPDroid.png"
                },
                {
                    "types": "text",
                    "info": "为了评估CrPDroid的有效性，对真实的Android应用程序错误报告进行了实验，并将崩溃再现工具ReCDroid、ReproBot和自动测试工具APE和PUMA与CrPDroit进行了比较。实验结果表明，CrPDroid成功再现了15个导致Android应用程序崩溃的错误报告。此外，与APE、PUMA、ReCDroid和ReproBot相比，CrPDroid再现崩溃的平均时间分别缩短了76.87%、81.94%、95.58%和76.55%，同一测试期间对可疑小部件的操作总数分别平均增加了44.07%、87.57%、88.70%和68.93%。"
                }
            ],
            "date": "2024年1月22日",
            "graphicAbstract": "CrPDroid.png",
            "doi": "10.1109/JIOT.2024.3357209",
            "href": "https://doi.org/10.1109/JIOT.2024.3357209"
        },
        {
            "id": "3",
            "title": "硕士研究生王浩仁在CCF A类中文期刊《电子学报》发表最新研究成果——基于冗余覆盖信息约简的软件缺陷定位方法",
            "content": [
                {
                    "types": "text",
                    "info": "软件规模和复杂程度的不断提高，为软件质量保障带来了严峻的挑战.软件缺陷定位是一种重要的软件质量保障技术，其中基于频谱的缺陷定位（Spectrum-based Fault Localization,SFL）是应用最为广泛的软件缺陷定位技术，其通过分析语句覆盖信息矩阵计算代码语句的可疑度值，并根据可疑度值定位缺陷所在语句.然而，语句覆盖信息矩阵中存在着严重的数据冗余问题，冗余的数据极大地影响了SFL的缺陷定位性能.以Defects4J数据集中395个程序的语句覆盖信息矩阵为例，在超过一半的语句覆盖信息矩阵中有90%的语句存在与其具有相同覆盖信息的语句."
                },
                {
                    "types": "text",
                    "info": "特征选择是常用的数据预处理技术，通过去除冗余和不相关特征来获取原始特征集中有价值的特征子集.因此，我们将语句覆盖信息矩阵作为原始特征集，将冗余覆盖信息约简建模为特征选择问题，提出了一种基于冗余覆盖信息约简的软件缺陷定位方法（Fault Localization based on Redundant coverage information Reduction,FLRR）.首先，使用特征选择技术对语句覆盖信息和测试用例执行结果组成的语句覆盖信息矩阵进行约简，得到语句覆盖信息矩阵子集；然后，使用SFL计算语句覆盖信息矩阵子集中语句的可疑度值，并根据可疑度值对语句进行降序排列，以定位缺陷语句.本文使用六种常用的特征选择技术对语句覆盖信息矩阵进行特征选择和约简，以得到语句覆盖信息矩阵子集，并使用四种典型的SFL技术对语句覆盖信息矩阵子集中的语句进行缺陷定位.为评估FLRR的缺陷定位性能，本文使用Einspect@n和MRR（Mean Reciprocal Rank）评价指标在基于Defects4J的数据集上与四种典型的SFL技术进行了对比实验."
                },
                {
                    "types": "image",
                    "info": "FLRR.png"
                },
                {
                    "types": "text",
                    "info": "实验结果表明，FLRR能够有效提升SFL的缺陷定位性能.对于Einspect@n指标，当n=1时，FLRR相比DStar、Ochiai、Barinel和OP2分别多定位到23条、26条、14条和13条缺陷语句，分别增加了69.70%、76.47%、45.16%和38.24%；对于MRR指标，FLRR相比DStar、Ochiai、Barinel和OP2分别提升了20.08%、24.94%、17.45%和19.15%. "
                }
            ],
            "date": "2024年3月12日",
            "graphicAbstract": "FLRR.png",
            "doi": "10.12263/DZXB.20220820",
            "href": "https://www.ejournal.org.cn/CN/10.12263/DZXB.20220820"
        },
        {
            "id": "4",
            "title": "硕士研究生张家铭在CCF A类中文期刊《计算机学报》发表最新研究成果——覆盖率制导的灰盒模糊测试研究综述",
            "content": [
                {
                    "types": "text",
                    "info": "由于部署简单、可扩展性强、挖掘到大量真实漏洞等原因,模糊测试得到了科研和工程人员的广泛关注.其中,覆盖率制导的灰盒模糊测试(Covcragc-guidcd Grcybox Fuzzing,简称CGF)以被测程序代码覆盖率为反馈信息,可对软件进行较为充分的自动化测试,有效地保障软件质量,是目前最为流行的一类模糊测试技术.研究人员为改进CGF投入了大量精力,产生了许多研究成果.然而,目前并未有研究针对CGF的已有研究工作进行系统性综述.为此,本文分析了近年来CGF的相关重要研究成果,将CGF流程划分为4个阶段:预处理、测试用例选择、测试用例演化和测试用例评估,并系统地分阶段分析了已有研究进展.此外,针对现有工作中评估分析设置不一致的问题,本文整理了CGF领域中常用的测试对象、实验设置及评估指标.最后,基于对已有研究进展的分析,阐述了CGF目前在预处理、测试用例选择等阶段存在的局限性、可能的解决方案以及未来的研究方向."
                },
                {
                    "types": "image",
                    "info": "CGF_Survey.png"
                }
            ],
            "date": "2024年4月8日",
            "graphicAbstract": "CGF_Survey.png",
            "doi": "10.11897/SP.J.1016.2024.01665",
            "href": "http://cjc.ict.ac.cn/qwjs/view.asp?id=5952"
        },
        {
            "id": "5",
            "title": "硕士研究生林高毅在CCF A类中文期刊《软件学报》发表最新研究成果——状态转换图制导的ARP错误检测方法",
            "content": [
                {
                    "types": "text",
                    "info": "Android应用开发人员需要在保持应用频繁更新的同时快速检测出应用中Android运行时权限(Android runtime permission, ARP)错误.现有的Android应用自动化测试工具通常未考虑ARP机制,无法有效测试Android应用内的权限相关行为."
                },
                {
                    "types": "text",
                    "info": "为帮助开发人员快速检测出应用中ARP错误,提出状态转换图制导的Android应用运行时权限错误检测方法.首先,对被测应用APK文件进行权限误用分析,插桩APK文件中可能导致ARP错误的API,并对APK文件重新签名;然后,安装插桩后的APK文件,动态探索应用以生成其状态转换图(state transition graph, STG);最后,使用STG制导自动化测试,快速检测出应用中ARP错误."
                },
                {
                    "types": "image",
                    "info": "RPBDroid.png"
                },
                {
                    "types": "text",
                    "info": "基于所提出方法实现原型工具RPBDroid,并与ARP错误动态检测工具SetDroid、PermDroid和传统自动化测试工具APE进行对比实验.实验结果表明, RPBDroid成功检测出17个应用中的15个ARP错误,比APE、SetDroid、PermDroid分别多14、12和14个.此外,相比于测试工具SetDroid、PermDroid和APE, RPBDroid检测ARP错误的平均用时分别减少86.42%、86.72%和86.70%."
                }
            ],
            "date": "2024年4月28日",
            "graphicAbstract": "RPBDroid.png",
            "doi": "10.13328/j.cnki.jos.007142",
            "href": "https://jos.org.cn/jos/article/abstract/7142"
        },
        {
            "id": "6",
            "title": "硕士研究生金昊宸在CCF B类国际期刊SCP发表最新研究成果——A directed greybox fuzzing tool for continuous integration",
            "content": [
                {
                    "types": "text",
                    "info": "模糊测试是一种自动化测试技术，因其效率和可扩展性而受到认可。尽管有其优势，但软件日益增长的复杂性和规模使测试软件变得越来越具有挑战性。如果模糊测试能够为缺陷倾向较高的模块优先分配资源，则可以有效地提高其缺陷检测性能。本文介绍了DPFuzz，一种用于优先分配模糊测试资源的工具。DPFuzz通过计算适应度得分来指导模糊测试，该得分基于具有不同缺陷倾向的模块的覆盖率。DPFuzz还展示了在软件质量保证中使用缺陷预测的实用性，并通过实验证实了其出色的缺陷检测性能。"
                },
                {
                    "types": "image",
                    "info": "DPFuzz.png"
                }
            ],
            "date": "2024年7月8日",
            "graphicAbstract": "DPFuzz.png",
            "doi": "10.1016/j.scico.2024.103170",
            "href": "https://doi.org/10.1016/j.scico.2024.103170"
        },
        {
            "id": "7",
            "title": "硕士研究生乔塬心在CCF C类国际会议SMC发表最新研究成果——Perturbing and Backtracking Based Textual Adversarial Attack",
            "content": [
                {
                    "types": "text",
                    "info": "在自然语言处理（Natural Language Processing，NLP）领域，语言模型被广泛应用于文本分类、机器翻译和逻辑推理等任务中。然而，语言模型缺陷的存在使得其容易受到对抗攻击，造成重大经济损失。通过模拟对抗攻击生成的对抗样本可以有效检测语言模型缺陷，并用于对抗训练来提升模型的鲁棒性。现有方法大多通过先选择待扰动重要单词再对其添加扰动来生成对抗样本。此类方法需要对受攻击的目标模型进行大量查询，在目标模型查询次数受限的场景下并不适用。如何以更高效的方式生成能够引发错误的对抗样本是一个亟待解决的问题。"
                },
                {
                    "types": "text",
                    "info": "为此，本文提出了基于决策边界扰动回溯的文本对抗攻击（Classification Boundary Adjacent Perturbation and Backtrack based Textual Adversarial Attack，CBAPB），该方法首先在保持样本原始语义不发生改变的条件下，在随机位置粗粒度地添加扰动，直到样本达到相似度阈值。然后对所有对抗成功的样本进行细粒度扰动回溯，来获得扰动幅度尽可能小的对抗样本。"
                },
                {
                    "types": "image",
                    "info": "CBAPB.png"
                },
                {
                    "types": "text",
                    "info": "本文在Yelp Reviews、AG News和DBpedia数据集上，以BERT为目标模型进行了多次实验。与TextFooler、BERTAttack和CLARE等方法相比，CBAPB需要的平均查询次数仅占上述方法的3.2%，对抗成功率也提高了7.6%，仅有文本相似度小幅下降了1.5%。实验结果表明，CBAPB可以有效地减少目标的模型访问次数，同时提高对抗成功率。"
                }
            ],
            "date": "2024年7月11日",
            "graphicAbstract": "CBAPB.png",
            "doi": "10.1109/SMC54092.2024.10831550",
            "href": "https://doi.org/10.1109/SMC54092.2024.10831550"
        },
        {
            "id": "8",
            "title": "硕士研究生张佳乐在CCF C类国际会议SMC发表最新研究成果——TS-FL: Software Fault Localization Based on Teacher-Student Network",
            "content": [
                {
                    "types": "text",
                    "info": "构建自动化的缺陷定位方法能够加快开发人员定位到复杂软件系统缺陷代码的过程。现有的缺陷定位方法通过结合不同传统缺陷定位方法输出的可疑分数来提升缺陷定位的性能，其中基于变异的缺陷定位方法输出的可疑分数，通常被称为变异特征，被证明能有效提升缺陷定位性能。然而，收集变异特征时需要生成大量变异体并为每个变异体执行测试用例，这需要大量的计算资源和时间，并且部分代码语句由于无法生成变异体，因此不具有变异特征，这将影响缺陷定位性能。"
                },
                {
                    "types": "text",
                    "info": "为此，本文提出了一种基于师生网络的缺陷定位方法(Teacher and Student network-based Fault Localization, TS-FL)， 首先使用基于BiLSTM的分类器提取代码语句的深层语义特征，并分别将基于频谱和基于变异的缺陷定位方法计算出的可疑分数作为代码语句的频谱特征和变异特征；然后构建师生网络，利用相互学习策略协同训练教师网络与学生网络，使学生网络可以学习教师网络中变异特征的信息从而提高缺陷定位性能；最后，学生网络通过学习代码语句的深层语义特征和频谱特征为每条代码语句计算可疑分数，最终根据可疑分数对代码语句进行降序排序，从而定位缺陷语句。为了评估TS-FL的缺陷定位性能，使用Top'-' N、MAR、MFR等评价指标在Defects4J数据集上进行实验。"
                },
                {
                    "types": "image",
                    "info": "TS-FL.jpg"
                },
                {
                    "types": "text",
                    "info": "实验结果表明，在不使用变异特征时，对于Top'-' 1指标，与基于频谱的缺陷定位方法Ochiai、Tarantula和DStar相比，TS-FL可分别多定位到36、36和35条缺陷语句；与基于深度学习的缺陷定位方法TRANSFER-FL相比，TS-FL可多定位到8条缺陷语句。"
                }
            ],
            "date": "2024年7月11日",
            "graphicAbstract": "TS-FL.jpg",
            "doi": "10.1109/SMC54092.2024.10831306",
            "href": "https://doi.org/10.1109/SMC54092.2024.10831306"
        },
        {
            "id": "9",
            "title": "硕士研究生杨君在CCF C类国际会议SMC发表最新研究成果——Issue Title Generation: How Far Can Large Language Models Go?",
            "content": [
                {
                    "types": "text",
                    "info": "在开源软件和开源平台中，开发人员通过issue来记录软件故障信息、报告文档缺失或提出新功能需求。标题是issue的必填字段，需简洁准确地概括issue核心内容。然而，由于经验不足、水平有限等原因，开发人员可能难以书写高质量的issue标题。为此，研究人员提出了几种issue标题生成方法来自动生成高质量标题，但生成效果依赖于构建相同项目的数据集用于训练模型。近年来，大语言模型（LLMs）在机器翻译、阅读理解、文本生成等各种通用任务上展现了卓越性能，也为其他生成式任务带来了巨大潜力。"
                },
                {
                    "types": "text",
                    "info": "在本文中，我们以ChatGPT作为LLMs代表，验证其在issue标题生成任务上的有效性。初步实验发现，直接使用LLMs难以获得令人满意的结果。为此，本文提出一种基于LLMs的issue标题生成方法LBITG，通过案例提示、标签提示等四种提示方式向LLMs提供相关上下文，引导其生成高质量标题，进一步提高LLMs的有效性。"
                },
                {
                    "types": "image",
                    "info": "LBITG.png"
                },
                {
                    "types": "text",
                    "info": " 实验结果表明，无需训练即可使用的LBITG能够提升LLMs生成标题的质量，在项目内场景下ROUGE、BLEU和METEOR指标相较iTAPE至少提升了111.29%、104.54%和188.48%，并取得了与SOTA方法iTiger相当的性能。此外，LBITG在跨项目场景下取得了最佳表现，在ROUGE-1、BLEU-1、METEOR等指标上相较iTiger分别提升了25.33%、30.14%和27.29%。"
                },
                {
                    "types": "image",
                    "info": "LBITG-2.jpg"
                }
            ],
            "date": "2024年7月11日",
            "graphicAbstract": "LBITG.png",
            "doi": "10.1109/SMC54092.2024.10831008",
            "href": "https://doi.org/10.1109/SMC54092.2024.10831008"
        },
        {
            "id": "10",
            "title": "硕士研究生任森林在CCF C类国际会议SMC发表最新研究成果——Combining Deep Learning and Expert Rules for Smart Contract Vulnerability Detection",
            "content": [
                {
                    "types": "text",
                    "info": "智能合约通常持有大量数字资产，一旦存在漏洞就可能造成巨大损失。因此，在智能合约部署前对其中可能存在的漏洞进行充分检测是十分必要的。智能合约中存在多种类型的漏洞，不同检测方法有各自的独特优势，有些漏洞可能更适合专家规则模型进行检测，有些漏洞则更适合深度学习模型进行检测，单一的检测方法通常无法充分发挥其检测漏洞的能力。"
                },
                {
                    "types": "text",
                    "info": "针对上述问题，我们提出了一种结合深度学习和专家规则的智能合约漏洞检测方法CDE-VD（Combining Deep Learning and Expert Rule for Smart Contract Vulnerability Detection）来进一步提高漏洞检测性能。该方法通过在检测前分类的方式，将智能合约样本分为深度学习倾向样本和专家规则倾向样本，并提取专家规则特征来训练智能合约检测方法分类器（SCDMC），使用训练后的SCDMC来预测待检测样本的类别，再选取适合的方法进行检测。"
                },
                {
                    "types": "image",
                    "info": "CDE-VD.png"
                },
                {
                    "types": "text",
                    "info": "实验结果表明，CDE-VD的漏洞检测性能优于单一的检测方法，在权限控制、时间戳依赖等五类漏洞的Accuracy、Precision、Recall和F_1值方面相较于SOTA方法MANDO分别取得了3.22%、2.32%、9.25%和6.54%的平均提高，这表明对智能合约样本进行类别预测可以提高漏洞检测性能。"
                }
            ],
            "date": "2024年7月11日",
            "graphicAbstract": "CDE-VD.png",
            "doi": "10.1109/SMC54092.2024.10831120",
            "href": "https://doi.org/10.1109/SMC54092.2024.10831120"
        },
        {
            "id": "11",
            "title": "硕士研究生韩骐鸿在CCF C类国际会议SMC发表最新研究成果——Vulnerability Detection by Sequential Learning of Program Semantics via Graph Attention Networks",
            "content": [
                {
                    "types": "text",
                    "info": "漏洞检测是保护软件系统免受网络攻击的一个重要方面。然而，有些类型的漏洞很难检测，需要从多个角度分析源代码。为此，我们提出了一个通用且易于扩展的框架，即 SGVD（用于漏洞检测的顺序图注意力网络）。"
                },
                {
                    "types": "text",
                    "info": "SGVD 由一个基于 GAT 学习代码语义表示的顺序模块和一个从多视图源代码中提取有用特征的新型融合预测模块组成。我们在一个包含两个大型开源 C 项目的数据集上对该框架进行了评估。实验结果表明，与现有的最先进的图学习漏洞检测工具 Devign 和 ReGVD 相比，SGVD 性能更好，准确率平均提高了 12.25%，精确度平均提高了 13.65%，F1 分数平均提高了 12.04%，召回率平均提高了 9.14%。。"
                },
                {
                    "types": "image",
                    "info": "SGVD.png"
                }
            ],
            "date": "2024年7月11日",
            "graphicAbstract": "SGVD.png",
            "doi": "10.1109/SMC54092.2024.10831776",
            "href": "https://doi.org/10.1109/SMC54092.2024.10831776"
        },
        {
            "id": "12",
            "title": "硕士研究生兰文尉在SCI 四区期刊SoftwareX发表最新研究成果——A directed greybox fuzzing tool for continuous integration",
            "content": [
                {
                    "types": "text",
                    "info": "在持续集成过程中经常发生更改。当面向持续集成时，现有的测试方法往往存在特异性弱或不足的问题。为了解决这个问题，我们实现了一个名为CIDFuzz的模糊测试工具用于持续集成。首先，进行差分分析以定位变更点，并计算基本块和变更点之间的距离。然后，这些距离被插至到被测程序中。在模糊测试过程中，根据种子的覆盖情况分配测试资源以有效地测试变更点。"
                },
                {
                    "types": "image",
                    "info": "CIDFuzz_tool.png"
                }
            ],
            "date": "2024年7月19日",
            "graphicAbstract": "CIDFuzz-tool.png",
            "doi": "10.1016/j.softx.2024.101824",
            "href": "https://doi.org/10.1016/j.softx.2024.101824"
        },
        {
            "id": "13",
            "title": "硕士研究生王天阔在CCF C类国际会议SEKE发表最新研究成果（Poster）——From Domain Models to Natural Language Requirement Documents: An Exploration of Requirement Missing Problems",
            "content": [
                {
                    "types": "text",
                    "info": "在软件工程中，精确的需求规格说明至关重要，通常来自容易产生歧义和不一致的自然语言文档。这可能会导致严重的遗漏，进而需要高昂的维护成本。本研究引入了RCADM方法，这是一种结合NLP和领域模型的方法，用于识别软件需求文档中的缺失需求，从而增强抽取。"
                },
                {
                    "types": "image",
                    "info": "RCADM.png"
                }
            ],
            "date": "2024年7月21日",
            "graphicAbstract": "RCADM.png",
            "doi": "10.18293/seke2024-114",
            "href": "https://doi.org/10.18293/seke2024-114"
        },
        {
            "id": "14",
            "title": "硕士研究生王正武在CCF C类国际会议SEKE发表最新研究成果——SDA-FirmFuzz: Fuzz Testing IoT Device Firmwares Based on Seed Differential Analysis",
            "content": [
                {
                    "types": "text",
                    "info": "物联网设备已经被用于我们生活的各个方面，近年来有攻击人员利用其设备固件中存在的漏洞，对设备进行控制并利用，因此确保固件的安全是十分重要的。模糊测试技术是一种软件自动化测试技术，已经在传统软件中挖掘到了大量漏洞。研究人员将模糊测试技术用于固件测试，大幅提升了其漏洞检测效率。现有的固件模糊测试主要关注模糊测试前的固件静态分析、改进仿真工具提高模糊测试的方法通用性和提高仿真吞吐量来提高模糊测试的效率等方面。一般来说，测试用例（种子）的质量会影响模糊测试的结果，高质量的种子可以使得覆盖更多的程序路径并触发崩溃。"
                },
                {
                    "types": "text",
                    "info": "因此本文提出一种基于种子差异化分析的物联网设备固件模糊测试方法SDA-FirmFuzz（Fuzz Testing of IoT Device Firmware Based on Seed Differential Analysis），通过在模糊测试前对种子队列进行差异化分析，使得差异化程度更高的种子优先被执行。首先通过提取种子字节矩阵，并使用余弦相似度计算方法得到相似度矩阵。之后通过相似度矩阵计算得到权重矩阵，再对相似度矩阵与权重矩阵进行计算，得到种子相似度分数。最后，根据相似度分数对种子队列重新排序，之后将新的种子队列输入物联网设备固件中进行模糊测试。"
                },
                {
                    "types": "image",
                    "info": "SDA-FirmFuzz.png"
                },
                {
                    "types": "text",
                    "info": "为了评估SDA-FirmFuzz的性能，我们在6个物联网设备固件上进行了实验，实验结果表明，SDA-FirmFuzz平均比Firm-AFL能够多覆盖1.26倍的程序路径和多触发32个唯一崩溃。"
                }
            ],
            "date": "2024年7月21日",
            "graphicAbstract": "SDA-FirmFuzz.png",
            "doi": "10.18293/SEKE2024-120",
            "href": "https://doi.org/10.18293/seke2024-120"
        },
        {
            "id": "15",
            "title": "硕士研究生谢瑞麟在CCF A类中文期刊《软件学报》发表最新研究成果——IADT:基于解释分析的深度神经网络差分测试",
            "content": [
                {
                    "types": "text",
                    "info": "随着深度神经网络(deep neural network, DNN)的迅猛发展,其在某些特定任务上的准确性已可媲美甚至超过人类.然而, DNN与传统软件一样不可避免地存在缺陷,若将带缺陷的DNN模型应用于安全攸关的领域甚至可能引发严重事故,如何有效检测缺陷DNN模型已成为亟需解决的问题.传统的差分测试方法将测试目标在同一测试输入下的输出结果作为差异分析的依据.然而,即使是相同训练程序和数据重复训练的不同DNN模型在同一测试输入下也常会产生不同的输出结果.因此,不能认为模型输出具有差异的两个模型中存在缺陷模型,基于测试对象输出结果的传统差分测试方法难以直接用于DNN模型的缺陷检测."
                },
                {
                    "types": "text",
                    "info": "为解决上述问题,提出基于解释分析的DNN模型差分测试方法 IADT (interpretation-analysis-based differential testing),利用解释方法分析DNN模型对于测试输入的行为解释,并使用统计方法分析模型对测试集行为解释的显著性差异来检测缺陷模型.使用真实缺陷模型进行实验的结果表明,解释方法的引入使IADT能有效检测缺陷DNN模型,检测缺陷模型的F1值比DeepCrime高0.8%–6.4%,而所消耗的时间仅为DeepCrime的4.0%–5.4%."
                },
                {
                    "types": "image",
                    "info": "IADT.png"
                }
            ],
            "date": "2024年8月15日",
            "graphicAbstract": "IADT.png",
            "doi": "10.13328/j.cnki.jos.007088",
            "href": "https://jos.org.cn/jos/article/abstract/7088"
        },
        {
            "id": "16",
            "title": "硕士研究生顾锡国在CCF C类国际会议ISPA发表最新研究成果——Detecting smart contract vulnerabilities based on fusing semantic and syntax structure information",
            "content": [
                {
                    "types": "text",
                    "info": "由于智能合约的广泛应用以及其携带的经济价值导致智能合约成为攻击者的攻击目标，智能合约的漏洞造成了重大的经济损失。因此，在智能合约部署前对其中可能存在的漏洞进行充分检测是十分必要的。然而，现有的机器学习的方法忽略节点和边的类型信息，而异构图的方法只表征出了合约的语义信息，而缺乏语法结信息，从而会因特征表征不完整而导致漏洞检测性能下降。"
                },
                {
                    "types": "text",
                    "info": "针对上述问题，我们提出了一种融合语义及语法结构信息智能合约漏洞检测方法HG-Detector（Heterogeneous Graph, Detector）。该方法通过分析智能合约源代码，并提取异构的抽象语法树（Heterogeneous Abstract Syntax Tree）、控制流图（Heterogeneous Control Flow Graph）和函数调用图（Heterogeneous Function Call Graph），以获取合约的语法和语义信息。通过使用异构图神经网络（Heterogeneous Graph Neural Network），从这些图中学习特征并进行拼接 来综合表征智能合约。最终，将综合特征输入到分类器检测智能合约中的潜在漏洞及其类型。"
                },
                {
                    "types": "image",
                    "info": "HG-Detector.png"
                },
                {
                    "types": "text",
                    "info": "在包含1269个合约的数据集上进行实验的结果表明，相比于MANDO，HG-Detector在7类漏洞上的Accuracy平均提升了4.78%，Precision平均提升了10.06%，Recall平均提升了1.61%，F1平均提升了2.29%。"
                }
            ],
            "date": "2024年8月21日",
            "graphicAbstract": "HG-Detector.png",
            "doi": "",
            "href": ""
        },
        {
            "id": "17",
            "title": "硕士研究生顾锡国在CCF A类中文期刊《电子学报》发表最新研究成果——SCG-Detector：基于图注意力网络的智能合约漏洞检测方法",
            "content": [
                {
                    "types": "text",
                    "info": "随着智能合约被广泛使用，其处理的业务逻辑更加复杂，代码复杂度越来越高，引发了大量安全漏洞.为避免潜在安全漏洞造成的危害，研究人员提出了一系列智能合约漏洞检测方法 .但现有方法对合约特征表征不完整，未将合约的语义及结构特征进行统一表征，难以准确、全面地检测和识别智能合约中的潜在漏洞和安全风险."
                },
                {
                    "types": "text",
                    "info": "为此，本文提出了基于图注意力网络的智能合约漏洞检测方法 SCG-Detector(Smart Contract Graph Detector).首先，通过解析合约源代码构建抽象语法树（Abstract Syntax Tree,AST）以表征合约语法结构信息，并在AST上添加表示语义信息的数据依赖关系和控制依赖关系，以构建合约图（Smart Contract Graph,SCG）同时表征合约的语法结构及语义信息；然后，将SCG输入到图注意网络模型中进行训练，利用注意力机制学习合约中漏洞的特征；最后，利用训练好的图注意力网络模型检测合约中是否存在漏洞及所存在漏洞的类型."
                },
                {
                    "types": "image",
                    "info": "SCG-Detector.png"
                },
                {
                    "types": "text",
                    "info": "SCG-Detector在12616个智能合约上进行的实验结果表明，相比于sFuzz、Conkas、ConFuzzius、Mythril、Osiris、Slither、Oyente、MANDO-GURU等8种广泛使用的方法，SCG-Detector的Precision最高提升了26.46%,Recall最高提升了69.64%,F1最高提升了59.57%."
                }
            ],
            "date": "2024年10月14日",
            "graphicAbstract": "SCG-Detector.png",
            "doi": "10.12263/DZXB.20231187",
            "href": "https://www.ejournal.org.cn/CN/10.12263/DZXB.20231187"
        },
        {
            "id": "18",
            "title": "硕士研究生谢瑞麟在CCF A类国际期刊TOSEM发表最新研究成果——IATT: Interpretation Analysis based Transferable Test Generation for Convolutional Neural Networks",
            "content": [
                {
                    "types": "text",
                    "info": "卷积神经网络（CNN）已被广泛应用于各个领域。然而，在部署卷积神经网络之前，必须进行充分的测试以检测内部缺陷，尤其是在安全敏感的场景中。生成错误诱导输入以触发错误行为是检测 CNN 模型缺陷的主要方法。但实际上，当被测模型是一个无法获取内部信息的黑盒 CNN 模型时，在某些情况下仍有必要在有限的测试预算内生成高质量的测试输入。在这种新情况下，一种可能的方法是通过分析与被测模型类似的其他白盒 CNN 模型的内部知识来生成可转移的测试输入，然后使用可转移的测试输入来测试黑盒 CNN 模型。生成可转移测试输入的主要挑战在于如何在不改变测试oracle的情况下，针对不同的 CNN 模型提高其错误诱导能力。我们发现，不同的 CNN 模型会根据图像中类似重要区域的特征进行预测。对重要区域添加有针对性的扰动将生成具有高度真实性的可转移测试输入。"
                },
                {
                    "types": "text",
                    "info": "因此，我们提出了基于解释分析的 CNN 可转移测试生成方法（IATT），该方法利用 CNN 模型的解释方法来解释和定位测试输入中的重要区域，并使用反向传播优化器和扰动掩码过程对这些重要区域添加有针对性的扰动，从而生成可转移的测试输入。这一过程不断重复，以反复优化测试输入的可转移性和真实性。"
                },
                {
                    "types": "image",
                    "info": "IATT.png"
                },
                {
                    "types": "text",
                    "info": "为了验证 IATT 的有效性，我们在 ResNet-50 和 Vit-B/16 等九个深度学习模型以及商业计算机视觉系统 Google Cloud Vision 上进行了实验研究，并将我们的方法与四种最先进的基线方法进行了比较。实验结果表明，IATT 生成的可转移测试输入能有效地使黑盒目标模型输出错误结果。与现有的测试和对抗攻击方法相比，IATT 在不同测试场景下的平均错误诱导成功率（ESR）比基线方法高出 18.1%∼52.7%。此外，IATT 生成的测试输入在实现高 ESR 的同时，还保持了较高的真实性。"
                }
            ],
            "date": "2024年11月5日",
            "graphicAbstract": "IATT.png",
            "doi": "10.1145/3705301",
            "href": "https://dl.acm.org/doi/abs/10.1145/3705301"
        },
        {
            "id": "19",
            "title": "硕士研究生段欣虹在CCF C类国际期刊IJSEKE发表最新研究成果——A CHANGE-LEVEL DEFECT PREDICTION APPROACH BASED ON TEACHER-STUDENT NETWORK",
            "content": [
                {
                    "types": "text",
                    "info": "变更级缺陷预测，又称及时（JIT）缺陷预测，专注于预测特定提交是否可能引入缺陷。它有效缓解了传统文件级缺陷预测技术的局限性，如粒度粗、难以跟踪、时效性差等。目前，大多数变更级缺陷预测技术都是利用专家特征或语义特征来构建缺陷预测模型。最近的研究表明，通过整合这两类特征可以提高缺陷预测性能。然而，由于实际项目中历史数据的缺失，获取专家特征并非易事。"
                },
                {
                    "types": "text",
                    "info": "针对上述问题，本文提出了基于师生网络的 TS-SDP（基于师生的软件缺陷预测）。首先，分析源代码以提取专家特征和语义特征。然后，构建师生网络框架。通过损失函数，学生网络可以从教师网络中学习专家特征。最后，在只有语义特征可用的情况下，学生网络可用于区分会诱发缺陷的提交和不会诱发缺陷的提交。"
                },
                {
                    "types": "image",
                    "info": "TS-SDP.png"
                },
                {
                    "types": "text",
                    "info": "在包含 21 个不同项目的数据集上进行的实验结果表明，当只有语义特征可用时，教师和学生网络之间的跨网络知识传播使预测缺陷成为可能。与最先进的变化级缺陷预测方法 JIT-Fine 相比，TS-SDP 的精度、召回率、F-measure 和准确率分别高出 0.130、0.114、0.123 和 0.016。"
                }
            ],
            "date": "2024年12月22日",
            "graphicAbstract": "TS-SDP.png",
            "doi": "10.1142/S0218194025500081",
            "href": "https://doi.org/10.1142/S0218194025500081"
        },
        {
            "id": "20",
            "title": "硕士研究生兰文尉在CCF B类国际期刊JSS发表最新研究成果——BaSFuzz: Fuzz Testing based on Difference Analysis for Seed Bytes",
            "content": [
                {
                    "types": "text",
                    "info": "覆盖引导的灰盒模糊（CGF）是最有效的动态软件测试技术之一，其重点是提高代码覆盖率。该方法通过变异现有测试用例并分析程序执行情况，自动生成新的子代测试用例，并保留有趣的测试用例用于后续变异。然而，现有的CGF工具通常忽略了种子之间的相似性。相似种子的变异会产生大量相似的子代测试用例，导致重复执行相似的代码段。这阻碍了代码覆盖率的提高，从而影响了模糊测试的效率。"
                },
                {
                    "types": "text",
                    "info": "针对这一问题，本文提出了一种基于种子字节差异分析的模糊测试方法BaSFuzz。该方法利用字节相似度和结构相似度来分析种子字节之间的差异，然后为每个种子计算一个相似度得分，并按相似度得分升序重新排列种子队列。"
                },
                {
                    "types": "image",
                    "info": "BaSFuzz.png"
                },
                {
                    "types": "text",
                    "info": "基于所提出的方法实现了原型工具，并在 12 个目标程序上与 AFL、AFLFast、MOpt、AFL++-Hier 和 HTFuzz 进行了比较。实验结果表明，与上述五种工具相比，BaSFuzz 的边覆盖率分别提高了 190.14%、143.9%、10.93%、374.85% 和 11.79%。此外，BaSFuzz 触发的独特崩溃数分别比它们多 3.57 倍、1.46 倍、42.38%、2.85 倍和 33.44%。"
                }
            ],
            "date": "2025年1月8日",
            "graphicAbstract": "BaSFuzz.png",
            "doi": "10.1016/j.jss.2025.112340",
            "href": "https://doi.org/10.1016/j.jss.2025.112340"
        },
        {
            "id": "21",
            "title": "硕士研究生杨君在CCF A类中文期刊《电子学报》发表最新研究成果——GITG：面向Gitee平台的issue标题自动生成方法",
            "content": [
                {
                    "types": "text",
                    "info": "在开源软件和开源平台中，开发人员可以通过提交issue来记录所发现的软件错误或提出新功能需求.由于缺乏经验、专业水平有限等原因，用户可能无法对issue内容进行准确有效地总结，导致issue标题质量较低，进而降低issue的解决效率.此外，现有的issue标题自动生成方法主要面向GitHub等英文开源平台，当应用在Gitee等国产开源平台时表现不佳.同时，现有方法主要使用issue主体描述作为输入，忽略了issue中的代码片段等重要信息."
                },
                {
                    "types": "text",
                    "info": "为此，本文提出一种面向Gitee平台的issue标题自动生成方法GITG（Gitee Issue Title Generation），针对包含中文和英文文本的issue，使用构建的Gitee issue数据集对支持中文的预训练模型Chinese BART进行微调，利用issue主体描述和代码片段的双模态信息来自动生成issue标题.为验证GITG的有效性，构建了包含18 242个Gitee issue样本的数据集."
                },
                {
                    "types": "image",
                    "info": "GITG.jpg"
                },
                {
                    "types": "text",
                    "info": "实验结果表明，GITG在ROUGE-1、ROUGE-2和ROUGE-L指标上相较于iTAPE和iTiger分别至少提升了13.09%、10.18%和12.84%，在BLEU和METEOR指标上同样取得了性能提升.人工评价结果表明，GITG生成标题的平均得分在整体分数、流畅性、信息性和简洁性4个评价指标上相较iTAPE和iTiger分别至少提升了26.7%、20.8%、24.2%和20.0%."
                }
            ],
            "date": "2025年1月24日",
            "graphicAbstract": "GITG.jpg",
            "doi": "10.12263/DZXB.20240434",
            "href": "https://doi.org/10.12263/DZXB.20240434"
        },
        {
            "id": "22",
            "title": "硕士研究生杨慧文在CCF A类中文期刊《软件学报》发表最新研究成果——基于目标制导符号执行的智能合约安全漏洞检测方法",
            "content": [
                {
                    "types": "text",
                    "info": "智能合约是运行在区块链上的计算机程序, 在扩展区块链功能、实现复杂应用的同时, 其潜在的安全漏洞也带来巨大风险. 基于符号执行的安全漏洞检测方法具有精确度高、可生成能复现漏洞的测试用例等优势. 然而,随着代码规模的增大, 符号执行技术容易受到路径爆炸、约束求解开销过大等问题的影响。"
                },
                {
                    "types": "text",
                    "info": "为此, 提出一种基于目标制导符号执行的智能合约安全漏洞检测方法, 首先将静态分析工具或人工标注的漏洞语句作为目标, 分析目标依赖语句, 补充事务序列以添加相关变量的符号约束. 然后, 基于智能合约字节码构建控制流图, 定位目标语句以及目标依赖语句所在的基本块, 剪枝控制流图以生成制导信息. 最后, 根据制导信息优化符号执行的路径探索策略,减少需要分析的基本块数量以及求解路径条件的时间, 最终高效地检测目标语句是否存在安全漏洞, 并输出可复现漏洞的测试用例."
                },
                {
                    "types": "image",
                    "info": "Smart-Target.png"
                },
                {
                    "types": "text",
                    "info": "基于上述思路实现 Smart-Target 原型工具, 在 SB Curated 数据集上与符号执行工具 Mythril 进行对比. 实验结果表明 Smart-Target 在安全漏洞检测和漏洞复现场景分别减少 60.76% 和 92.16% 的时间开销, 大幅提高符号执行效率. 此外, Smart-Target 通过分析目标依赖语句使其多检测到 22.02% 的安全漏洞, 有效提升了漏洞检测能力."
                }
            ],
            "date": "2025年1月24日",
            "graphicAbstract": "Smart-Target.png",
            "doi": "10.13328/j.cnki.jos.007396",
            "href": "http://dx.doi.org/10.13328/j.cnki.jos.007396"
        },
        {
            "id": "23",
            "title": "硕士研究生李静雯在EI期刊《计算机工程与应用》发表最新研究成果——融合多类特征的语句级缺陷定位方法",
            "content": [
                {
                    "types": "text",
                    "info": "现有基于深度学习的语句级缺陷定位方法通过深度学习模型学习各种传统缺陷定位方法计算出的可疑度值等特征来进行缺陷定位，其主要关注执行测试用例的动态信息，未关注缺陷语句与非缺陷语句之间的类不平衡问题，缺陷定位的准确性有待进一步提高。"
                },
                {
                    "types": "text",
                    "info": "为此，提出了一种融合多类特征的语句级缺陷定位方法SMSDFL（Combine Spectrum， Mutation and Semantic Features for Deep Fault Localization），该方法首先将多种基于频谱和变异的缺陷定位方法计算的可疑度值作为频谱特征和变异特征，利用数据流和控制流对代码语句进行切片，获取与对应语句存在依赖关系的代码片段，以计算Overlap、Tightness等度量元作为其语义特征；然后采用生成对抗网络扩增缺陷语句的特征数据来解决缺陷语句与非缺陷语句之间的类不平衡问题；最后将这三类特征进行融合输入到递归神经网络中计算语句的可疑度值，并根据可疑度值对语句进行降序排序，以定位缺陷语句。"
                },
                {
                    "types": "image",
                    "info": "SMSDFL.png"
                },
                {
                    "types": "text",
                    "info": "为评估SMSDFL的缺陷定位性能在Defects4J数据集上进行了实验。实验结果表明，SMSDFL取得了比现有方法更好的缺陷定位效果，其中，仅检查可疑语句排名中的第一条语句时，SMSDFL比Ochiai、MUSE、CGAN4FL和GRACE分别多定位到166、161、151、68条缺陷语句。 "
                }
            ],
            "date": "2025年1月24日",
            "graphicAbstract": "SMSDFL.png",
            "doi": "",
            "href": ""
        },
        {
            "id": "24",
            "title": "硕士研究生刘诗凡在SCI 一区期刊Expert Systems With Applications(ESWA)发表最新研究成果——SEOCD: Detecting obsolete code comments by fusing semantic features and expert features",
            "content": [
                {
                    "types": "text",
                    "info": "Code comments play a crucial role in enhancing software quality and maintainability. Despite their significance, developers frequently neglect to update corresponding comments in tandem with code changes, leading to inconsistencies between the code and the comments, commonly known as obsolete comments. Extensive research has been conducted on detecting obsolete comments to tackle this issue, with promising performance achieved by separately leveraging semantic or expert features. Semantic features and expert features describe code changes from different perspectives. Nevertheless, prior studies either take semantic or expert features to detect obsolete comments, constraining their overall effectiveness. "
                },
                {
                    "types": "text",
                    "info": "In response to this challenge this study introduces an obsolete comment detection approach called SEOCD (Semantic and Expert Features-based Obsolete Comment Detection), which fuses semantic features with expert features, extracting the former from samples using a Transformer-based model and the later through rules related to code modifications and comments. The fusion of these two features is then employed to train a MLP (Multilayer Perceptron) model to classify the obsolescence of code comments. The results of the obsolete code comment detection approach provide by SEOCD can guide the comment update process, thereby enhancing the efficiency of the updating comments."
                },
                {
                    "types": "image",
                    "info": "SEOCD.jpg"
                },
                {
                    "types": "text",
                    "info": "Experimental results demonstrate that SEOCD outperforms the state-of-the-art approach in Precision, Recall, and F1-score, with improvements of 3.1%, 1.7%, and 4.6%, respectively."
                }
            ],
            "date": "2025年3月27日",
            "graphicAbstract": "SEOCD.jpg",
            "doi": "10.1016/j.eswa.2025.127470",
            "href": "https://doi.org/10.1016/j.eswa.2025.127470"
        },
        {
            "id": "25",
            "title": "硕士研究生符海阔在EI期刊《计算机工程与应用》发表最新研究成果——QAAttack:基于文本特征分析的问答系统模糊测试方法",
            "content": [
                {
                    "types": "text",
                    "info": "传统问答系统测试方法依赖预先标注的数据集，但人工标注成本较高，且某些测试场景中通常缺少标注数据。为应对这一问题，研究人员提出通过构建蜕变关系生成测试数据以评估系统鲁棒性。然而，现有方法在测试用例生成过程中缺乏测试指导和选择策略，导致生成大量冗余或无效的测试数据，可能影响测试结果有效性。"
                },
                {
                    "types": "text",
                    "info": "针对上述问题，本文提出基于文本特征分析的问答系统模糊测试方法QAAttack，采用多种蜕变关系进行种子变异，计算问题句中单词的TF-IDF分数以确定优先变异顺序，并引入基于答案语义相似度的种子选择策略，在每轮迭代中优先选择最可能触发系统错误的种子。"
                },
                {
                    "types": "image",
                    "info": "QAAttack.jpg"
                },
                {
                    "types": "text",
                    "info": "实验结果表明，与现有方法相比，QAAttack显著提升了检测问答系统错误行为的有效性，其检测的错误行为数量较QAAskeR多出14,236个；此外，其触发错误行为的成功率相较于QATest提升了37.08%。"
                }
            ],
            "date": "2025年4月30日",
            "graphicAbstract": "QAAttack.jpg",
            "doi": "",
            "href": ""
        },
        {
            "id": "26",
            "title": "硕士研究生施前程在CCF C类国际会议SMC发表最新研究成果——SPRoC: Semantics-Preserving Mutations for Robustness Evaluation of Code Generation Large Language Models",
            "content": [
                {
                    "types": "text",
                    "info": "随着大语言模型（LLM）在代码生成领域的广泛应用，其生成能力不断增强，但模型对输入提示的微小变化仍表现出显著的不稳定性，给实际使用带来了挑战。现有变异提示方法普遍存在限制，如Radamsa等结构变异方法主要通过随机插入、删除或替换字符等操作对提示进行变异，缺乏对提示语义和结构的理解，这种方法不能模拟真实用户对问题表述方式的多样性，导致无法有效评估LLM生成代码的鲁棒性。"
                },
                {
                    "types": "text",
                    "info": "为此，本文提出了一种基于提示变异的大语言模型代码生成任务鲁棒性评估方法——SPRoC（Semantics-Preserving Robustness of Code generation）。该方法基于BERT模型对自然语言问题进行变异操作，生成一组在语义上与原始提示一致但在表述上具有多样性的变异提示，进而构造出包含变异提示的数据集，然后对 LLM生成的代码进行功能性验证。 SPRoC通过比对变异前后LLM生成代码的功能正确性检测LLM在应对输入变化时的鲁棒性。"
                },
                {
                    "types": "image",
                    "info": "SPRoC.png"
                },
                {
                    "types": "text",
                    "info": "我们以HumanEval数据集为基础，分别在ChatGPT、DeepSeek、Claude、ERNIE、Qwen等多个主流大语言模型上开展实验，评估模型在面对SPRoC变异后的生成性能。实验结果表明，SPRoC能够在较小语义变化下降低模型的Pass@k值，Pass@1、5、10分别降低了4.46%、1.83%、1.22%，且优于现有的基线方法Radamsa。在BLEU与BERTScore等相似性指标上也表现更优，分别提升了12.96%、1.83%。本文工作不仅验证了当前主流模型对在语义保持变异下的鲁棒性，也展示了SPRoC方法在评估模型鲁棒性方面的实用性和通用性，为提升大语言模型在实际开发场景中的稳定性提供了新的研究路径。"
                }
            ],
            "date": "2025年6月30日",
            "graphicAbstract": "SPRoC.png",
            "doi": "",
            "href": ""
        },
        {
            "id": "27",
            "title": "硕士研究生杨凯淇在CCF C类国际会议SMC发表最新研究成果——SCoVerLLM: Smart Contract Vulnerability Detection via LLM-Based In-Context and Chain-of-Thought Prompts",
            "content": [
                {
                    "types": "text",
                    "info": "智能合约作为区块链技术的重要应用，已应用到金融、物联网等多个领域，但其潜在漏洞可能导致重大经济损失，因此需要高效准确的漏洞检测方法以保障其安全性。现有检测方法多依赖预定义规则或判别模型，面临维护成本高、语义理解能力弱等问题。"
                },
                {
                    "types": "text",
                    "info": "为此，本文提出了一种大语言模型的智能合约漏洞检测方法SCoVerLLM(Smart Contract Vulnerability Detection via LLM-Based In-Context and Chain-of-Thought Prompts)，通过结合深度学习模型生成的预测信息与相似合约示例，利用上下文学习提示和结构化思维链模板，指导LLM逐步解析合约逻辑进行漏洞检测，从而提升智能合约漏洞检测性能。"
                },
                {
                    "types": "image",
                    "info": "SCoVerLLM.png"
                },
                {
                    "types": "text",
                    "info": "实验结果表明，SCoVerLLM在多个性能指标上优于MANDO、Mythril等4个方法，Accuracy、Precision和F_1分别提高了10.72%~19.20%、8.70%~18.51%和10.09%~25.08%。"
                }
            ],
            "date": "2025年6月30日",
            "graphicAbstract": "SCoVerLLM.png",
            "doi": "",
            "href": ""
        },
        {
            "id": "28",
            "title": "硕士研究生段欣虹在CCF C类国际会议SMC发表最新研究成果——Empowering LLM-based Software Defect Prediction with Chain-of-Thought and In-context Learning",
            "content": [
                {
                    "types": "text",
                    "info": "软件缺陷预测通过对项目历史数据进行分析，提前识别潜在缺陷，以降低开发成本并提升软件质量。现有方法依赖于人工设计特征或深度学习模型，既难以捕捉复杂语义和上下文依赖，又需要大量标注数据。"
                },
                {
                    "types": "text",
                    "info": "针对上述问题，本文提出一种基于大语言模型（Large Language Models, LLMs）的软件缺陷预测方法ELASTIC（Empowering LLM-based Software Defect Prediction with Chain-of-Thought and In-context Learning）。ELASTIC采用MinHash与局部敏感哈希算法检索相似代码片段，并构建融合代码变更上下文与分步推理路径的增强提示词，无需对LLMs进行微调即可实现软件缺陷预测。"
                },
                {
                    "types": "image",
                    "info": "ELASTIC.png"
                },
                {
                    "types": "text",
                    "info": "在包含21，047个样本的FunctionSStuBs4J数据集上的实验结果表明，ELASTIC的F1值较现有最优方法提升0.9%，Recall提升31.9%，显著优于COMPDEFECT等基线模型。"
                }
            ],
            "date": "2025年6月30日",
            "graphicAbstract": "ELASTIC.png",
            "doi": "",
            "href": ""
        },
        {
            "id": "29",
            "title": "硕士研究生何启帆在CCF C类国际会议SMC发表最新研究成果——MR-OT: a Metamorphic Testing Method for Object Tracking Models",
            "content": [
                {
                    "types": "text",
                    "info": "为确保DNN模型的可靠性，研究人员提出了多种测试方法。但现有测试方法多针对图像识别等静态场景任务，未关注如目标跟踪、行为检测等动态场景中因输入数据的时间连续性和环境条件的动态变化所带来的挑战。"
                },
                {
                    "types": "text",
                    "info": "在本文中，我们针对动态场景提出一种基于蜕变测试的目标跟踪模型测试方法MR-OT，设计了五种蜕变关系来评估待测模型在自然天气变化、速度变化、环境干扰等三类常见场景下的鲁棒性，并结合生成式对抗网络等方法，根据源测试数据生成大量真实且具有时间连续性的测试数据。"
                },
                {
                    "types": "image",
                    "info": "MR-OT.jpg"
                },
                {
                    "types": "text",
                    "info": "实验结果表明，MR-OT检测到的蜕变关系违反率更高，相比DeepTest提升0.06~0.49，相比MT4MOT提升0.04~0.57。"
                }
            ],
            "date": "2025年6月30日",
            "graphicAbstract": "MR-OT.jpg",
            "doi": "",
            "href": ""
        },
        {
            "id": "30",
            "title": "硕士研究生王正武在EI期刊《计算机工程与应用》发表最新研究成果——嵌入式设备固件模糊测试技术综述",
            "content": [
                {
                    "types": "text",
                    "info": "为确保嵌入式设备的安全可靠，需要对嵌入式设备固件进行充分测试，以及时发现并修复其中的漏洞。近年来，有研究人员将模糊测试技术应用到嵌入式设备固件的测试中，有效提高了测试效率。本文总结了 2014 年至 2024 年关于嵌入式设备固件模糊测试的相关研究成果，将嵌入式设备固件模糊测试过程分为三个阶段：预处理、测试环境建立、模糊测试执行，并分别介绍了各阶段的研究成果。此外，本文还讨论了现有嵌入式设备固件模糊测试的数据集和评估指标，并对嵌入式设备固件模糊测试未来的研究方向进行展望，以为研究人员提供参考。"
                },
                {
                    "types": "image",
                    "info": "ZongshuFirmFuzz.png"
                }
            ],
            "date": "2025年7月3日",
            "graphicAbstract": "ZongshuFirmFuzz.png",
            "doi": "",
            "href": ""
        },
        {
            "id": "31",
            "title": "硕士研究生顾锡国在SCI 二区Top期刊Applied Soft Computing Journal发表最新研究成果——Smart Contract Vulnerability Detection Method Based on Multi-View Fusion",
            "content": [
                {
                    "types": "text",
                    "info": "随着区块链技术的快速发展，智能合约因其广泛应用和巨大经济价值，成为攻击者的主要目标，其潜在漏洞可能导致严重的经济损失。现有的智能合约漏洞检测方法通常依赖于从源代码或字节码中提取控制流图、函数调用图或抽象语法树来表征合约的语义和语法特征。然而，这些方法在特征表示的全面性和重要性权重分配上仍存在不足，影响检测精度。"
                },
                {
                    "types": "text",
                    "info": "为此，本文提出了一种基于多视图融合学习智能合约漏洞检测方法（MV-SCVD）。该方法通过解析智能合约源代码，构建异构抽象语法树、异构控制流图和异构函数调用图，并利用Multi-Level Graph Neural Networks对三种图的特征进行独立学习，最后采用图注意力网络融合这些特征，并通过分类器检测合约中的漏洞及其类型。"
                },
                {
                    "types": "image",
                    "info": "MV-SCVD.png"
                },
                {
                    "types": "text",
                    "info": "在包含1269个智能合约的公开数据集上的实验结果表明，与现有方法相比，MV-SCVD在7类常见漏洞上的检测性能显著提升，Accuracy平均值提升了13.67%～31.25%，Precision的平均值提升了6.92%～20.09%，Recall的平均值提升了20.78%～58.90%，F_1的平均值提升了15.67%～46.47%。"
                }
            ],
            "date": "2025年7月5日",
            "graphicAbstract": "MV-SCVD.png",
            "doi": "",
            "href": ""
        }
    ]
}